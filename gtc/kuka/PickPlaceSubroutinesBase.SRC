&ACCESS RVP1
&REL 10
&PARAM DISKPATH = KRC:\R1\Program
DEF PickPlaceSubroutinesBase()

; Declaration of KRL variables
DECL INT ret   ; Return value for RSI commands
DECL INT CONTID   ; ContainerID
DECL INT i
DECL INT j
DECL BOOL useRSI ; Do we use RSI
ENUM FIXTURE_ID A1, B1, C1, C2
ENUM FIXTURE_OPCODE PICK, PLACE 

;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD VEO INI

  ;ENDFOLD (VEO INI)
;ENDFOLD (INI)

;FOLD Joint Move Home
$BWDSTART=FALSE
PDAT_ACT=P2P_FULL_SPEED
FDAT_ACT=WORLD_FRAME
BAS(#PTP_PARAMS,100)
PTP PROG_HOME
;ENDFOLD

;FOLD Setup RSI
useRSI=TRUE
IF useRSI==TRUE THEN

  ; Create RSI Context 
  ret = RSI_CREATE("RSI_Ethernet.rsi",CONTID,TRUE)
  IF (ret <> RSIOK) THEN
    HALT
  ENDIF

  ; Start RSI execution
  ret = RSI_ON(#RELATIVE)
  IF (ret <> RSIOK) THEN
    HALT
  ENDIF

ENDIF
;ENDFOLD

WAIT SEC 0.5; PAUSE TO REGISTER AT HOME

;FOLD WAIT FOR ( IN 1 'Button1' );%{PE}%R 8.3.41,%MKUKATPBASIS,%CEXT_WAIT_FOR,%VEXT_WAIT_FOR,%P 2:, 4:, 5:$IN, 6:1, 7:Button1, 9:
WAIT FOR  ( $IN[1] ) 
;ENDFOLD

FIXTURE_OP(#PICK, #C1)
FIXTURE_OP(#PLACE, #B1)
FIXTURE_OP(#PICK, #C2)
FIXTURE_OP(#PLACE, #A1)
;FOLD Joint Move Home
$BWDSTART=FALSE
PDAT_ACT=P2P_FULL_SPEED
FDAT_ACT=WORLD_FRAME
BAS(#PTP_PARAMS,100)
PTP PROG_HOME
;ENDFOLD

LOOP

;FOLD Wait for B1 Operator Finished 
WAIT FOR  ( $IN[1] ) 
;ENDFOLD

FIXTURE_OP(#PICK, #B1)
FIXTURE_OP(#PLACE, #C1)
;FOLD Joint Move Home
$BWDSTART=FALSE
PDAT_ACT=P2P_FULL_SPEED
FDAT_ACT=WORLD_FRAME
BAS(#PTP_PARAMS,100)
PTP PROG_HOME
;ENDFOLD
FIXTURE_OP(#PICK, #C1)
FIXTURE_OP(#PLACE, #B1)
;FOLD Joint Move Home
$BWDSTART=FALSE
PDAT_ACT=P2P_FULL_SPEED
FDAT_ACT=WORLD_FRAME
BAS(#PTP_PARAMS,100)
PTP PROG_HOME
;ENDFOLD

;FOLD Wait for A1 Operator Finished 
WAIT FOR  ( $IN[2] ) 
;ENDFOLD

FIXTURE_OP(#PICK, #A1)
FIXTURE_OP(#PLACE, #C2)
;FOLD Joint Move Home
$BWDSTART=FALSE
PDAT_ACT=P2P_FULL_SPEED
FDAT_ACT=WORLD_FRAME
BAS(#PTP_PARAMS,100)
PTP PROG_HOME
;ENDFOLD
FIXTURE_OP(#PICK, #C2)
FIXTURE_OP(#PLACE, #A1)
;FOLD Joint Move Home
$BWDSTART=FALSE
PDAT_ACT=P2P_FULL_SPEED
FDAT_ACT=WORLD_FRAME
BAS(#PTP_PARAMS,100)
PTP PROG_HOME
;ENDFOLD

ENDLOOP
END

DEF SET_SOLENOID_EXTEND(EXTENDED:IN)
  DECL BOOL EXTENDED
  $OUT[SOLENOID_ON_CHAN]=EXTENDED
  $OUT[SOLENOID_OFF_CHAN]=NOT EXTENDED
  $OUT[END_EFFECTOR_SIGNAL_CHAN]=EXTENDED
  RETURN
END

DEF EXTEND_SOLENOID()
  SET_SOLENOID_EXTEND(TRUE)
  RETURN
END

DEF RETRACT_SOLENOID()
  SET_SOLENOID_EXTEND(FALSE)
  RETURN
END

DEFFCT FDAT FRAME_FROM_FIXTURE(FIX_ID:IN)
  DECL FIXTURE_ID FIX_ID
  DECL FDAT RET_VAL
  SWITCH FIX_ID
    CASE #C1
      RET_VAL=FIXTURE_C1_FRAME
    CASE #C2
      RET_VAL=FIXTURE_C2_FRAME
    CASE #A1
      RET_VAL=FIXTURE_A_FRAME
    CASE #B1
      RET_VAL=FIXTURE_B_FRAME
    DEFAULT
      RET_VAL=WORLD_FRAME
      HALT
  ENDSWITCH
  RETURN RET_VAL
ENDFCT

DEF FIXTURE_OP(OPCODE:IN, FIX_ID:IN)
  DECL FIXTURE_ID FIX_ID
  DECL FIXTURE_OPCODE OPCODE
  DECL FDAT FIX_FRAME
  FIX_FRAME=FRAME_FROM_FIXTURE(FIX_ID)


  GO_TO_FIXTURE(FIX_ID)
  SWITCH OPCODE
    CASE #PICK
      PICKUP_WORKPIECE(FIX_FRAME)
    CASE #PLACE
      PLACE_WORKPIECE(FIX_FRAME)
    DEFAULT
    HALT
  ENDSWITCH
  LEAVE_FIXTURE(FIX_ID)
END

DEF GO_TO_FIXTURE(FIX_ID:IN)
  DECL FIXTURE_ID FIX_ID

  ;FOLD Approx Joint Move Home
  $BWDSTART=FALSE
  PDAT_ACT=P2P_FULL_SPEED
  FDAT_ACT=WORLD_FRAME
  BAS(#PTP_PARAMS,100)
  PTP PROG_HOME C_PTP
  ;ENDFOLD

  SWITCH FIX_ID
    CASE #C1
      ;FOLD PTP Clear C1 
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_C1 
      ;ENDFOLD
    CASE #C2
      ;FOLD PTP Clear C2 
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_C2 
      ;ENDFOLD
    CASE #A1
      ;FOLD PTP Swing A1
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP XSWING_A1 
      ;ENDFOLD
      ;FOLD PTP Clear A1 
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_A1
      ;ENDFOLD
    CASE #B1
      ;FOLD PTP Clear B1
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_B1
      ;ENDFOLD
    DEFAULT
      HALT
  ENDSWITCH
  RETURN
END

DEF LEAVE_FIXTURE(FIX_ID:IN)
  DECL FIXTURE_ID FIX_ID

  SWITCH FIX_ID
    CASE #C1
      ;FOLD PTP Clear C1 
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_C1 
      ;ENDFOLD
    CASE #C2
      ;FOLD PTP Clear C2 
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_C2 
      ;ENDFOLD
    CASE #A1
      ;FOLD PTP Clear A1 
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_A1
      ;ENDFOLD
      ;FOLD PTP Swing A1
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP XSWING_A1 
      ;ENDFOLD
    CASE #B1
      ;FOLD PTP Clear B1
      $BWDSTART=FALSE
      PDAT_ACT=P2P_FULL_SPEED
      FDAT_ACT=WORLD_FRAME
      BAS(#PTP_PARAMS,100)
      PTP CLEAR_B1
      ;ENDFOLD
    DEFAULT
      HALT
  ENDSWITCH
  RETURN
END

DEF PLACE_WORKPIECE(FIX_FRAME:IN)
  DECL FDAT FIX_FRAME

  ;FOLD Joint Move to Above 
  $BWDSTART=FALSE
  PDAT_ACT=P2P_FULL_SPEED
  FDAT_ACT=FIX_FRAME
  BAS(#PTP_PARAMS,100)
  PTP FIX_UP_PIN_IN
  ;ENDFOLD
  ;FOLD Move to Above 
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_UP_PIN_IN
  ;ENDFOLD

  ;FOLD Drop part to fixture
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_DOWN_PIN_IN
  ;ENDFOLD

  ;FOLD Release Part
  RETRACT_SOLENOID()
  WAIT SEC 0.75
  ;ENDFOLD

  ;FOLD Slide Pin Out
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_DOWN_PIN_OUT
  ;ENDFOLD

  ;FOLD Pull up without part 
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_UP_PIN_OUT
  ;ENDFOLD

  ;FOLD Move to Above 
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_UP_PIN_IN
  ;ENDFOLD
END

DEF PICKUP_WORKPIECE(FIX_FRAME:IN)
  DECL FDAT FIX_FRAME

  ;FOLD Joint Move to Above 
  $BWDSTART=FALSE
  PDAT_ACT=P2P_FULL_SPEED
  FDAT_ACT=FIX_FRAME
  BAS(#PTP_PARAMS,100)
  PTP FIX_UP_PIN_IN
  ;ENDFOLD
  ;FOLD Move to Above 
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_UP_PIN_IN
  ;ENDFOLD

  ;FOLD Move over to clear pin
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_UP_PIN_OUT
  ;ENDFOLD

  ;FOLD Drop down
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_DOWN_PIN_OUT
  ;ENDFOLD

  ;FOLD Slide Pin In 
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_DOWN_PIN_IN
  ;ENDFOLD

  ;FOLD Grab Part
  EXTEND_SOLENOID()
  WAIT SEC 0.75
  ;ENDFOLD

  ;FOLD Lift with Part 
  $BWDSTART=FALSE
  LDAT_ACT=LIN_TWO_MPS
  FDAT_ACT=FIX_FRAME
  BAS(#CP_PARAMS,2)
  LIN FIX_UP_PIN_IN
  ;ENDFOLD
END


